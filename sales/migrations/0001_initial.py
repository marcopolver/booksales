# Generated by Django 2.1.7 on 2019-02-20 14:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GenericUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=16, unique=True)),
                ('name', models.CharField(max_length=20)),
                ('surname', models.CharField(max_length=20)),
                ('registration_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_login_datetime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookAd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=500)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('quality_class', models.CharField(choices=[('A', 'Classe A'), ('B', 'Classe B'), ('C', 'Classe C'), ('D', 'Classe D')], max_length=1)),
                ('publication_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_edit_datetime', models.DateTimeField(auto_now=True)),
                ('purchase_confirmation', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('t', 'title'), ('tr', 'title_review'), ('ba', 'book_ad'), ('ur', 'user_review')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='InterestingTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('isbn', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=10)),
                ('cover_image', models.ImageField(null=True, upload_to='images/title_covers')),
                ('description', models.TextField(max_length=500)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_edit_datetime', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('FIS', 'Fisica'), ('MAT', 'Matematica'), ('INF', 'Informatica'), ('MEC', 'Meccanica'), ('EN', 'Elettronica'), ('ECO', 'Economia'), ('AUT', 'Automazione'), ('STA', 'Statistica')], max_length=3)),
                ('content_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='titoli_content', to='sales.Content')),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.BookAd')),
            ],
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('genericuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('personal_email', models.EmailField(max_length=254, unique=True)),
                ('handled_reports_number', models.IntegerField(default=0)),
                ('handled_help_req_number', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=('sales.genericuser',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('genericuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('university_email', models.EmailField(max_length=254, unique=True)),
                ('telephone_number', models.CharField(max_length=16, null=True, unique=True)),
                ('personal_email', models.EmailField(max_length=254, null=True, unique=True)),
                ('facebook_page', models.URLField(null=True, unique=True)),
                ('major', models.CharField(choices=[('ING_INF_T', 'Ingegneria informatica triennale'), ('ING_INF_M', 'Ingegneria informatica magistrale'), ('ING_MEC_T', 'Ingegneria meccanica triennale'), ('ING_MEC_M', 'Ingegneria meccanica magistrale'), ('ING_GES_T', 'Ingegneria gestionale triennale'), ('ING_GES_M', 'Ingegneria gestionale magistrale')], max_length=10)),
                ('year_of_study', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('sold_books_number', models.IntegerField(default=0)),
                ('bought_books_number', models.IntegerField(default=0)),
                ('reports_number', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=('sales.genericuser',),
        ),
        migrations.AddField(
            model_name='title',
            name='description_user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='descrizioni', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='interestingtitle',
            name='title_isbn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.Title'),
        ),
        migrations.AddField(
            model_name='bookad',
            name='content_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='annunci_content', to='sales.Content'),
        ),
        migrations.AddField(
            model_name='bookad',
            name='title_isbn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annunci_titolo', to='sales.Title'),
        ),
        migrations.AddField(
            model_name='wishlist',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_books', to='sales.Student'),
        ),
        migrations.AddField(
            model_name='interestingtitle',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interesting_titles', to='sales.Student'),
        ),
        migrations.AddField(
            model_name='bookad',
            name='buyer_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acquisti', to='sales.Student'),
        ),
        migrations.AddField(
            model_name='bookad',
            name='seller_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annunci_studente', to='sales.Student'),
        ),
        migrations.AlterUniqueTogether(
            name='wishlist',
            unique_together={('ad_id', 'user_id')},
        ),
        migrations.AlterUniqueTogether(
            name='interestingtitle',
            unique_together={('title_isbn', 'user_id')},
        ),
    ]
